#
# CASCADE rules
# source: gitlab.mitre.org/cascade/cascade3-server
#
- id: CASCADE-0000
  name: Tools (Microsoft) - sc.exe (Service Control Manager)
  description: The built-in Windows tool sc.exe may be used to query, or manipulate
    existing services. This analytic detects all execution of the process sc.exe,
    and the different flags may separately be decoded into the corresponding ATT&CK
    techniques as separate analytics.
  eql: |-
    process where subtype.create and exe == "sc.exe"
  attack_info: []
  mode: ~
- id: CASCADE-0001
  name: Tools (Microsoft) - sc.exe "create" - Service Creations
  description: The "create" flag to the process "sc.exe" communicates with the Service
    Control Manager (services.exe) to create new services or drivers. This provides
    a form of Persistence, and often Privilege Escalation, because services typically
    run as SYSTEM processes.
  eql: |-
    process where subtype.create and
      exe == "sc.exe" and command_line == "* create *"
  attack_info:
  - tactics:
    - Persistence
    - Privilege Escalation
    technique_id: T1543.003
    technique_name: Create or Modify System Process - Windows Service
  mode: first-pass
- id: CASCADE-0002
  name: Tools (Microsoft) - sc.exe "query" - Service Discovery
  description: The "modify" flag to the process "sc.exe" communicates with the Service
    Control Manager (services.exe) to query the state of existing services or drivers.
    It identifies information such as the current service state and type as well as
    exit codes for failed services.
  eql: |-
    process where subtype.create and
        exe == "sc.exe" and command_line == "* query*"
  attack_info:
  - tactics:
    - Discovery
    technique_id: T1007
    technique_name: System Service Discovery
  mode: first-pass
- id: CASCADE-0003
  name: Tools (Microsoft) - sc.exe "queryex" - Service Discovery
  description: The "queryex" command to sc.exe extends the functionality provided
    by "query" command, but additionally adds the PID and FLAGS fields as output,
    which identify the process in which each service resides.
  eql: |-
    process where subtype.create and
        exe == "sc.exe" and command_line == "* queryex*"
  attack_info:
  - tactics:
    - Discovery
    technique_id: T1007
    technique_name: System Service Discovery
  mode: first-pass
- id: CASCADE-0004
  name: Network - RPC Activity
  description: Windows uses Distributed Computing Environment / Remote Procedure Calls
    (RPC) to expose and remotely call into known interfaces on other remote hosts.
    Like any built-in Windows mechanism, RPC may be used for benign or nefarious purposes.
    RPC can be used for any purposes and can generically be used remotely query, modify
    or execute configurations.
  eql: |-
    flow where subtype.start and
        dest_port == "135"
  attack_info: []
  mode: ~
- id: CASCADE-0005-A
  name: Tools (Microsoft) - net.exe - "user" - Query Users
  description: The "user" command to the net tool can be used to query users, which
    may be used for Discovery and potential information for future targets of credentials
    to gain.
  eql: |-
    process where subtype.create and
        exe == "net.exe" and command_line == "* user*" and command_line != "* /domain*"
  attack_info:
  - tactics:
    - Discovery
    technique_id: T1087.001
    technique_name: Account Discovery - Local Account
  mode: ~
- id: CASCADE-0005-B
  name: Tools (Microsoft) - net.exe - "user" - Query Users
  description: The "user" command to the net tool can be used to query users, which
    may be used for Discovery and potential information for future targets of credentials
    to gain.
  eql: |-
    process where subtype.create and
        exe == "net.exe" and command_line == "* user*" and command_line == "* /domain*"
  attack_info:
  - tactics:
    - Discovery
    technique_id: T1087.002
    technique_name: Account Discovery - Domain Account
  mode: ~
- id: CASCADE-0006
  name: Tools (Microsoft) - net.exe - "use" - Mount Shares
  description: Windows SMB shares typically need to be mounted before file movement
    can occur. Normal users may mount shares as part of logon scripts or daily use,
    but command line usage in obscure process trees may be indicative of an APT moving
    laterally.
  eql: |-
    process where subtype.create and
        exe == "net.exe" and command_line == "* use *\\*"
  attack_info:
  - tactics:
    - Lateral Movement
    technique_id: T1021.002
    technique_name: Remote Services - SMB/Windows Admin Shares
  mode: first-pass
- id: CASCADE-0007
  name: Tools (Microsoft) - route.exe
  description: route command is used to manipulate network routing tables
  eql: |-
    process where subtype.create and exe == "route.exe"
  attack_info:
  - tactics:
    - Discovery
    technique_id: T1016
    technique_name: System Network Configuration Discovery
  mode: first-pass
- id: CASCADE-0008
  name: Tools (Microsoft) - net.exe - "session" - Enumerate Shares
  description: ' Lists or disconnects sessions between the computer and other computers
    on the network '
  eql: |-
    process where subtype.create and
        exe == "net.exe" and command_line == "*session*"
  attack_info:
  - tactics:
    - Discovery
    technique_id: T1049
    technique_name: System Network Connections Discovery
  mode: first-pass
- id: CASCADE-0009
  name: Tools (Microsoft) - net.exe - "localgroup" - Enumerate Local Groups
  description: The "localgroup" argument to net.exe displays the groups on the local
    system.
  eql: |-
    process where subtype.create and
        exe == "net.exe" and command_line == "* localgroup*"
  attack_info:
  - tactics:
    - Discovery
    technique_id: T1069.001
    technique_name: Permission Groups Discovery - Local Groups
  mode: first-pass
- id: CASCADE-0010
  name: Tools (Microsoft) - net.exe - "view" - Enumerate Domain
  description: The "view" command to the Windows built-in tool net.exe tool enumerates
    the hosts on the domain. This can be used for discovering the layout, naming conventions
    or potential next steps for lateral movement.
  eql: |-
    process where subtype.create and
        exe == "net.exe" and command_line == "* view*"
  attack_info:
  - tactics:
    - Discovery
    technique_id: T1018
    technique_name: Remote System Discovery
  mode: first-pass
- id: CASCADE-0011
  name: Tools (Microsoft) - net.exe - "start" - Enumerate Services
  description: The "start" command to net.exe displays the currently running services
    on the system.
  eql: |-
    process where subtype.create and
        exe == "net.exe" and command_line == "* start*"
  attack_info:
  - tactics:
    - Discovery
    technique_id: T1007
    technique_name: System Service Discovery
  mode: first-pass
- id: CASCADE-0012
  name: Tools (Microsoft) - netstat.exe
  description: The netstat command lists the currently open connections and listening
    ports. Using different arguments, the tool can be used to match these connections
    to running processes, list ipv4 and ipv6 connections, and gather statistics on
    network adapters.
  eql: |-
    process where subtype.create and
        exe == "netstat.exe"
  attack_info:
  - tactics:
    - Discovery
    technique_id: T1049
    technique_name: System Network Connections Discovery
  mode: ~
- id: CASCADE-0013
  name: Tools (Microsoft) - tasklist.exe
  description: The tasklist tool outputs a list of the running processes on a local
    or remote system. It can also be used to query services or loaded modules into
    processes.
  eql: |-
    process where subtype.create and
        exe == "tasklist.exe"
  attack_info:
  - tactics:
    - Discovery
    technique_id: T1057
    technique_name: Process Discovery
  - tactics:
    - Discovery
    technique_id: T1518.001
    technique_name: Software Discovery - Security Software Discovery
  mode: ~
- id: CASCADE-0014
  name: Tools (Microsoft) - taskkill.exe
  description: Taskkill can be used to kill processes on a local or remote system.
  eql: |-
    process where subtype.create and
        exe == "taskkill.exe"
  attack_info:
  - tactics:
    - Defense Evasion
    technique_id: T1562.006
    technique_name: Impair Defenses - Indicator Blocking
  mode: ~
- id: CASCADE-0015
  name: Tools (Microsoft) - nbtstat.exe
  description: The Windows built-in tool nbtstat can be used to generate NetBIOS queries.
    It can remotely check for up/down status of a host with the command line arguments
    "-a" or "-A"
  eql: |-
    process where subtype.create and
        exe == "nbtstat.exe"
  attack_info:
  - tactics:
    - Discovery
    technique_id: T1016
    technique_name: System Network Configuration Discovery
  - tactics:
    - Discovery
    technique_id: T1049
    technique_name: System Network Connections Discovery
  mode: ~
- id: CASCADE-0016
  name: Tools (Microsoft) - reg.exe
  description: The reg.exe tool is built-in to Windows and provides a command-line
    interface to the Windows registry that allows for queries, modifications and creations
    of entries.
  eql: |-
    process where subtype.create and
        exe == "reg.exe"
  attack_info: []
  mode: ~
- id: CASCADE-0017
  name: Tools (Microsoft) - reg.exe - "add/load/import"  (Modifications)
  description: The "add", "load" and "import" commands to reg.exe modify keys, values
    and data in the Windows registry.
  eql: |-
    process where subtype.create and
      exe == "reg.exe"
      and (command_line == "* ADD *" or command_line == "* COPY *" or command_line == "* RESTORE *" or command_line == "* LOAD *")
  attack_info:
  - tactics:
    - Defense Evasion
    technique_id: T1112
    technique_name: Modify Registry
  mode: ~
- id: CASCADE-0018
  name: Analytic - Winlogon Spawning Cmd
  description: If winlogon.exe launches an instance of a command shell, it is likely
    a proof of persistence and privilege escalation. This can be done by assigning
    a debugger for the builtin accessibility features and triggering the feature from
    within the Remote Desktop login screen.
  eql: |-
    process where subtype.create and
      parent_image_path == "C:\\windows\\system32\\winlogon.exe" and exe == "cmd.exe"
  attack_info:
  - tactics:
    - Persistence
    - Privilege Escalation
    technique_id: T1546.008
    technique_name: Event Triggered Execution - Accessibility Features
  mode: first-pass
- id: CASCADE-0019
  name: Tools (Microsoft) - ping.exe
  description: The builtin ping tool sends ICMP echo requests to check the status
    of remote hosts
  eql: |-
    process where subtype.create and
        exe == "ping.exe"
  attack_info:
  - tactics:
    - Discovery
    technique_id: T1018
    technique_name: Remote System Discovery
  mode: ~
- id: CASCADE-0020
  name: Tools (Microsoft) - sc.exe "modify" - Service Modifications
  description: The "modify" flag to the process "sc.exe" communicates with the Service
    Control Manager (services.exe) to modify existing services or drivers. This provides
    a form of Persistence, and often Privilege Escalation, because services typically
    run as SYSTEM processes.
  eql: |-
    process where subtype.create and
        exe == "sc.exe" and command_line == "* config *"
  attack_info:
  - tactics:
    - Persistence
    technique_id: T1543.003
    technique_name: Create or Modify System Process - Windows Service
  mode: ~
- id: CASCADE-0021
  name: Tools (Microsoft) - netsh.exe
  description: The built-in tool netsh (shortened from "network shell") provides the
    capability to locally or even remotely interact with network components. It has
    been used to query advanced firewall rules with the "netsh advfirewall" command
    , enumerate network adapters or configure network settings, using "netsh interface
    show".
  eql: |-
    process where subtype.create and
        exe == "netsh.exe"
  attack_info:
  - tactics:
    - Discovery
    technique_id: T1518.001
    technique_name: Software Discovery - Security Software Discovery
  mode: ~
- id: CASCADE-0022
  name: Tools (Microsoft) - ipconfig.exe
  description: Windows program used to obtain information about local network adapters,
    such as IP and subnet information
  eql: |-
    process where subtype.create and
        exe == "ipconfig.exe"
  attack_info:
  - tactics:
    - Discovery
    technique_id: T1016
    technique_name: System Network Configuration Discovery
  mode: ~
- id: CASCADE-0023
  name: Tools (Microsoft) - arp.exe
  description: Displays and modifies the IP-to-Physical address translation tables
    used by address resolution protocol (ARP).
  eql: |-
    process where subtype.create and
        exe == "arp.exe"
  attack_info:
  - tactics:
    - Discovery
    technique_id: T1016
    technique_name: System Network Configuration Discovery
  mode: first-pass
- id: CASCADE-0024
  name: Tools (Microsoft) - tree.com
  description: The builtin tree command can recursively and graphically generate a
    tree of the file system and be used to map out a folder.
  eql: |-
    process where subtype.create and
        exe == "tree.com"
  attack_info:
  - tactics:
    - Discovery
    technique_id: T1083
    technique_name: File and Directory Discovery
  mode: first-pass
- id: CASCADE-0025
  name: Tools (Microsoft) - systeminfo.exe
  description: Displays operating system config info for a local or remote machine,
    including service pack levels.
  eql: |-
    process where subtype.create and
        exe == "systeminfo.exe"
  attack_info:
  - tactics:
    - Discovery
    technique_id: T1082
    technique_name: System Information Discovery
  mode: first-pass
- id: CASCADE-0026
  name: Tools (Microsoft) - systeminfo.exe - "/s" (Remote System)
  description: Remotely queries the system configuration for a target system. May
    additionally include a username and password for remote authentication if the
    current token is not sufficient.
  eql: |-
    process where subtype.create and
        exe == "systeminfo.exe" and command_line == "* /s*"
  attack_info:
  - tactics:
    - Discovery
    technique_id: T1082
    technique_name: System Information Discovery
  mode: first-pass
- id: CASCADE-0027
  name: Tools (Microsoft) - at.exe
  description: Task scheduling may be used to execute programs on a scheduled basis
    to persist adversary code or gain SYSTEM privileges.
  eql: |-
    process where subtype.create and
        exe == "at.exe" and command_line == "* * *"
  attack_info:
  - tactics:
    - Persistence
    technique_id: T1053.005
    technique_name: Scheduled Task/Job - Scheduled Task
  - tactics:
    - Privilege Escalation
    technique_id: T1053.005
    technique_name: Scheduled Task/Job - Scheduled Task
  mode: first-pass
- id: CASCADE-0028
  name: Tools (Microsoft) - at.exe (Remote)
  description: In order to schedule a command on a remote host, the hostname is proceeded
    by two back slashes.
  eql: |-
    process where subtype.create and
        exe == "at.exe" and command_line == "* * *" and command_line == "* \\*"
  attack_info:
  - tactics:
    - Execution
    technique_id: T1053.005
    technique_name: Scheduled Task/Job - Scheduled Task
  mode: first-pass
- id: CASCADE-0029
  name: Tools (Microsoft) - schtasks.exe
  description: Task scheduling may be used to execute programs on a scheduled basis
    to persist adversary code or gain SYSTEM privileges.
  eql: |-
    process where subtype.create and
        exe == "schtasks.exe"
  attack_info: []
  mode: ~
- id: CASCADE-0030
  name: Tools (Microsoft) - schtasks.exe - Creation/Modification
  description: The "/create" and "/change" arguments to schtasks.exe allow privileged
    users to create and change scheduled tasks. For now, this command only looks at
    the creation of new scheduled tasks.
  eql: |-
    process where subtype.create and
        exe == "schtasks.exe" and command_line == "* /Create*"
  attack_info:
  - tactics:
    - Persistence
    technique_id: T1053.005
    technique_name: Scheduled Task/Job - Scheduled Task
  mode: ~
- id: CASCADE-0031
  name: Tools (Microsoft) - schtasks.exe - Run
  description: Arguments needed to modify the scheduled tasks of a system.
  eql: |-
    process where subtype.create and
        exe == "schtasks.exe" and command_line == "* /Run*"
  attack_info:
  - tactics:
    - Execution
    technique_id: T1053.005
    technique_name: Scheduled Task/Job - Scheduled Task
  mode: ~
- id: CASCADE-0032
  name: Tools (Microsoft) - schtasks.exe - Queries
  description: Queries of schedule tasks using "schtasks /query" could potentially
    indicate use of the tool to enumerate information about the environment in order
    to look for privilege escalation opportunities.
  eql: |-
    process where subtype.create and
      exe == "schtasks.exe" and (command_line == "* /Query*" or command_line == "* /ShowSid*")
  attack_info:
  - tactics:
    - Discovery
    technique_id: T1057
    # "Task Discovery"
    technique_name: Process Discovery
  mode: first-pass
- id: CASCADE-0033
  name: Event - Service Processes (children of services.exe)
  description: The services.exe process hosts the Windows Service Control Manager
    (SCM). Most Windows services execute in the context of an individual process or
    a part of a service group and hosted in a DLL loaded by svchost.exe. Child processes
    of services.exe indicate the execution of Windows services.
  eql: |-
    process where subtype.create and parent_image_path == "c:\\windows\\system32\\services.exe"
  attack_info:
  - tactics:
    - Persistence
    - Privilege Escalation
    technique_id: T1569.002
    technique_name: System Services - Service Execution
  mode: ~
- id: CASCADE-0034
  name: Tools (Microsoft) - schtasks.exe - Remote (/s)
  description: Looking for "schtasks" commands to remote machines should be considered
    highly suspicious and many environments, as it can be used to remotely execute
    command on another machine. This may be combined with a lateral movement activity,
    such as an SMB file write to move an implant from one hostto the next.
  eql: |-
    process where subtype.create and
        exe == "schtasks.exe" and command_line == "* /s *"
  attack_info:
  - tactics:
    - Execution
    technique_id: T1053.005
    technique_name: Scheduled Task/Job - Scheduled Task
  mode: first-pass
- id: CASCADE-0035
  name: Tools (Microsoft) - powershell.exe - Windows PowerShell Engine
  description: PowerShell can be used for many legitimate or illegitimate activity.
    It is commonly used to provide a more robust CLI and can allow for custom scripts
    to be run natively without spawning additional processes. This functionality is
    key for an adversary to evade defenses as process monitoring is increasingly ubiquitous.
  eql: |-
    process where subtype.create and
        exe == "powershell.exe"
  attack_info:
  - tactics:
    - Execution
    technique_id: T1059.001
    technique_name: 'Command and Scripting Interpreter: PowerShell'
  mode: ~
- id: CASCADE-0036
  name: Tools (Microsoft) - telnet.exe
  description: remote services allows users to gain access to other system on a network
  eql: |-
    process where subtype.create and
        exe == "telnet.exe"
  attack_info:
  - tactics:
    - Lateral Movement
    technique_id: T1021
    technique_name: Remote Services
  mode: first-pass
- id: CASCADE-0037
  name: Tools - (Third-Party) 7z
  description: The 7zip tool is another archiver and may be used for exfiltration.
  eql: |-
    process where subtype.create and
        exe == "7zip.exe"
  attack_info:
  - tactics:
    - Exfiltration
    technique_id: T1560.001
    technique_name: Archive Collected Data - Archive via Utility
  mode: ~
- id: CASCADE-0038
  name: Tools (Third-Party) - RAR
  description: compress data for possible exfiltration
  eql: |-
    process where subtype.create and
        exe == "rar.exe"
  attack_info:
  - tactics:
    - Exfiltration
    technique_id: T1560.001
    technique_name: Archive Collected Data - Archive via Utility
  mode: first-pass
- id: CASCADE-0039
  name: Tools (Third-Party) - WinZip
  description: WinZip is one of many known archivers that may be used for exfiltration.
  eql: |-
    process where subtype.create and
        exe == "winzip*.exe"
  attack_info:
  - tactics:
    - Exfiltration
    technique_id: T1560.001
    technique_name: Archive Collected Data - Archive via Utility
  mode: ~
- id: CASCADE-0040
  name: Tools (Microsoft) - net.exe
  description: The net.exe command is a generic tool that is built-in to Windows that
    can be used to query and modify users and services, enumerate and mount file shares,
    and interfaces with several other key components of the operating system. It can
    be described as a Swiss Army Knife because of its versatility.
  eql: |-
    process where subtype.create and
        exe == "net.exe"
  attack_info: []
  mode: ~
- id: CASCADE-0041
  name: Tools (Third-Party) - ssh.exe
  description: SSH is used to remotely gain console access on another machine, assuming
    valid credentials are present and the machine is running an SSH server.
  eql: |-
    process where subtype.create and
        exe == "ssh.exe"
  attack_info:
  - tactics:
    - Lateral Movement
    technique_id: T1021.004
    technique_name: Remote Services - SSH
  mode: ~
- id: CASCADE-0042
  name: Network - Remote Service Manipulation
  description: Detect network connections from the services.exe. This implies RPC
    activity to the Service Control Manager. Although the specific calls made can't
    be distinguished, the activity in itself may indicate a lateral movement attempt,
    discovery of running services or other remote modifications to the system services.
  eql: |-
    flow where subtype.start and
        exe == "services.exe"
  attack_info:
  - tactics:
    - Discovery
    technique_id: T1007
    technique_name: System Service Discovery
  # This rule may generate too many first-pass hits
  mode: first-pass
- id: CASCADE-0043
  name: Tools (Microsoft) - sc.exe "start" - Service Discovery
  description: The "start" flag to the process "sc.exe" communicates with the Service
    Control Manager (services.exe) to start existing services. This may be used in
    conjunction with replacing the service binary (ATT&CK:T1044) when its file permissions
    are not properly restricted. A service execution will grant an adversary execution,
    and typically escalate privileges.
  eql: |-
    process where subtype.create and
        exe == "sc.exe" and command_line == "* start *"
  attack_info:
  - tactics:
    - Execution
    technique_id: T1569.002
    technique_name: System Services - Service Execution
  mode: ~
- id: CASCADE-0044
  name: Tools (Microsoft) - dsquery.exe - Domain Server Queries
  description: The dsquery.exe tool queries objects in the active directory. It is
    built-in to Windows servers, but can be added to other workstations as part of
    the server administration tools package. APTs have used it to identify key accounts,
    workstations and servers to target, and to build out a mapping of the organizational
    structure of the enterprise.
  eql: |-
    process where subtype.create and
        exe == "dsquery.exe"
  attack_info:
  - tactics:
    - Discovery
    technique_id: T1087.002
    technique_name: Account Discovery - Domain Account
  mode: ~
- id: CASCADE-0045
  name: Tools (Microsoft) - net.exe - "use" - Enumerate Shares
  description: The "use" command to the net.exe tool can be used to mount and enumerate
    the mounted and disconnected shares. This analytic looks for instances of the
    command that do not contain shares and servers in the command line, indicating
    that it will be used for enumeration.
  eql: |-
    process where subtype.create and
        exe == "net.exe" and command_line == "* use"
  attack_info:
  - tactics:
    - Discovery
    technique_id: T1049
    technique_name: System Network Connections Discovery
  mode: ~
- id: CASCADE-0046
  name: Tools (Microsoft) - whoami.exe
  description: The built-in whoami executable will display the user of the active
    token. It can also be used to display the active privileges, group membership,
    and to get the path within the Active Directory.
  eql: |-
    process where subtype.create and
        exe == "whoami.exe"
  attack_info:
  - tactics:
    - Discovery
    technique_id: T1033
    technique_name: System Owner/User Discovery
  mode: first-pass
- id: CASCADE-0047
  name: Tools (Microsoft) - cmd.exe (Command Shell)
  description: The Windows built-in command line interface, cmd.exe, is used to provide
    a shell and launch processes and batch files. An APT may use this to have a single
    shell to run processes from, or may use seperate shells. The tool "cmd.exe" runs
    many times and this analytic will not work as a single means of detection. However,
    it may be useful in a second pass or by looking for outliers to identify unusual
    programs that spawn a shell.
  eql: |-
    process where subtype.create and exe == "cmd.exe"
  attack_info:
  - tactics:
    - Execution
    technique_id: T1059.003
    technique_name: Command and Scripting Interpreter - Windows Command Shell
  mode: ~
- id: CASCADE-0048
  name: Tools (Third-Party) - zip
  description: Programs ending with "*zip" tools may be used to create archives, which
    may be used in exfiltration.
  eql: |-
    process where subtype.create and
        (exe == "winzip*.exe" or exe == "zip*.exe")
  attack_info:
  - tactics:
    - Exfiltration
    technique_id: T1560.001
    technique_name: Archive Collected Data - Archive via Utility
  mode: ~
- id: CASCADE-0049
  name: Tools (Microsoft) - net.exe - "use" - Mount Admin Shares
  description: Administrative shares, such as ADMIN$, IPC$ and C$ can only be mounted
    by accounts with administrative access on a machine. These commands should be
    only run by trusted users to known machines, but are commonly used by the APT
    when trying to laterally move to another host.
  eql: |-
    process where subtype.create and
      exe == "net.exe" and command_line == "* use *\\\\*"
      and command_line == "* *\\\\*\\*$*"
  attack_info:
  - tactics:
    - Lateral Movement
    technique_id: T1021.002
    technique_name: Remote Services - SMB/Windows Admin Shares
  mode: first-pass
- id: CASCADE-0050
  name: Tools (Microsoft) - net.exe - "time" (Remote System)
  description: Remotely queries the time of another host, using NetBIOS. Can be a
    prerequisite for some Lateral Movement activities, such as scheduling a task,
    which require knowing (or guessing) the time on a remote host.
  eql: |-
    process where subtype.create and
      exe == "net.exe" and command_line == "* time *" and command_line == "* \\*"
  attack_info:
  - tactics:
    - Discovery
    technique_id: T1124
    technique_name: System Time Discovery
  mode: first-pass
- id: CASCADE-0051
  name: Analytic - Copy Into Network Share (via "cmd /c copy" or "xcopy")
  description: 'Infer that a file copy has been made into a network share via the
    "copy" command to cmd, or the xcopy process has a network path \\hostname\share
    in the command-line. Note: This analytic is a work in progress and must be updated
    to differentiate between source and target paths.'
  eql: |-
    process where subtype.create and
      ((exe == "cmd.exe" and command_line == "* copy *") or exe == "xcopy.exe") and
      command_line == "*\\\\*"
  attack_info:
  - tactics:
    - Lateral Movement
    technique_id: T1105
    technique_name: Lateral Tool Transfer
  mode: first-pass
- id: CASCADE-0052
  name: Tools (Microsoft) - hostname.exe
  description: The Windows built-in command "hostname" can be used to return the hostname
    of the active host. This does not include the domain. It can be used legitimately
    but may be used by an adversary to gain information about the operating host and
    to confirm the location of a callback.
  eql: |-
    process where subtype.create and
        exe == "hostname.exe"
  attack_info:
  - tactics:
    - Discovery
    technique_id: T1082
    technique_name: System Information Discovery
  mode: ~
- id: CASCADE-0053
  name: Tools (Microsoft) - wmic.exe - "/node:" and "process call create" - Remote
    Execution
  description: WMIC.exe can be used to remotely launch executables on another machine.
    The target processes will have the parent of WmiPrvSe.exe.
  eql: |-
    process where subtype.create and command_line == "* process *"
      and command_line == "* call *" and command_line == "* create *" and command_line == "* /node:*"
      and exe == "wmic.exe"
  attack_info:
  - tactics:
    - Execution
    technique_id: T1047
    technique_name: Windows Management Instrumentation
  mode: first-pass
- id: CASCADE-0054
  name: Tools (Microsoft) - powershell.exe - Bypass Execution Policy
  description: PowerShell can run custom scripts using the "-ExecutionPolicy bypass"
    arguments. By default, unsigned PowerShell scripts will not run and the execution
    policy needs to be changed, which can be done within PowerShell or via the command
    line arguments.
  eql: |-
    process where subtype.create and
        exe == "powershell.exe" and command_line == "* bypass*"
  attack_info:
  - tactics:
    - Defense Evasion
    technique_id: T1553
    technique_name: Subvert Trust Controls
  - tactics:
    - Execution
    technique_id: T1059.001
    technique_name: 'Command and Scripting Interpreter: PowerShell'
  mode: ~
- id: CASCADE-0055
  name: Tools (Microsoft) - powershell.exe - EncodedCommand
  description: PowerShell can run commands encoded in base64 using the "-EncodedCommand"
    argument. This is a known technique used by APTs and common tools that allows
    for short scripts to be encoded onto the command line, evading many defensive
    measures.
  eql: |-
    process where subtype.create and exe == "powershell.exe" and
      (command_line == "*-e *" or command_line == "*-ec *" or command_line == "* -EncodedCommand*")
  attack_info:
  - tactics:
    - Defense Evasion
    technique_id: T1027
    technique_name: Obfuscated Files or Information
  - tactics:
    - Execution
    technique_id: T1059.001
    technique_name: Command and Scripting Interpreter - PowerShell
  # This rule generates too many first-pass hits in the ARES environment
  mode: first-pass
- id: CASCADE-0056
  name: Event - Scheduled Task Processes (children of taskeng.exe)
  description: As a second pass, it can be helpful to identify processes spawned by
    taskeng.exe to identify execution of scheduled tasks.
  eql: |-
    process where subtype.create and
        parent_exe == "taskeng.exe"
  attack_info:
  - tactics:
    - Persistence
    technique_id: T1053.005
    technique_name: Scheduled Task/Job - Scheduled Task
  mode: ~
- id: CASCADE-0057
  name: Analytic - Services Launching Cmd
  description: 'Windows runs the Service Control Manager (SCM) within the process
    services.exe. Windows launches services as independent processes or DLL loads
    within a svchost.exe group. To be a legitimate service, a process (or DLL) must
    have the appropriate service entry point SvcMain. If an application does not have
    the entry point, then it will timeout (default is 30 seconds) and the process
    will be killed.

    To survive the timeout, adversaries and red teams can create services that direct
    to cmd.exe with the flag /c, followed by the desired command. The /c flag causes
    the command shell to run a command and immediately exit. As a result, the desired
    program will remain running and it will report an error starting the service.
    This analytic will catch that command prompt instance that is used to launch the
    actual malicious executable.

    Additionally, the children and descendants of services.exe will run as a SYSTEM
    user by default. Thus, services are a convenient way for an adversary to gain
    Persistence and Privilege Escalation.'
  eql: |-
    process where subtype.create and
      parent_image_path == "c:\\windows\\system32\\services.exe" and exe == "cmd.exe"
  attack_info:
  - tactics:
    - Execution
    technique_id: T1569.002
    technique_name: System Services - Service Execution
  mode: first-pass
- id: CASCADE-0058
  name: Registry Persistence - Service Path Creation/Modification
  description: Detect registry modifications to services stored in the path HKLM\SYSTEM\CurrentControlSet\Services.
    Although services can be created or modified by using existing tools, such as
    sc.exe, there are stealthier ways, such as using the Windows API directly. By
    monitoring the registry locations, all service modifications can be detected.
    Additionally, when modifying these services via the Service Control Manager (SCM)
    API, the process "services.exe" will be responsible for registry modifications.
    Modifications made to these locations by other tools may be more suspicious.
  eql: |-
    registry where subtype.write_value and
      key == "HKLM\\SYSTEM\\CurrentControlSet\\Services\\*"
      and (value == "ImagePath" or value == "ServiceDll")
  attack_info:
  - tactics:
    - Privilege Escalation
    technique_id: T1543.003
    technique_name: Create or Modify System Process - Windows Service
  mode: ~
- id: CASCADE-0059
  name: Registry Persistence - Accessibility Feature Debuggers
  description: Detect changes to the debuggers by monitoring the registry in known
    locations. When a debugger is set for an application (defined by the subkey),
    the value "Debugger" is set to a program that will be spawned instead as a "debugger".
  eql: |-
    registry where subtype.write_value and
        value == "Debugger"
        and key == "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\*"
        and (key == "*\\sethc.exe" or key == "*\\narrator.exe" or key == "*\\magnify.exe")
  attack_info:
  - tactics:
    - Persistence
    technique_id: T1546.008
    technique_name: Event Triggered Execution - Accessibility Features
  mode: ~
- id: CASCADE-0060
  name: Analytic - File Creations to Network Paths
  description: 'Identify instance of file creations where files are written to network
    paths, by looking for file paths that resemble

    "\\hostname\share\*". Remote file creations can identify files being pushed onto
    other systems over SMB in order to accomplish lateral movement.'
  eql: |-
    file where subtype.create and
      file_path == "\\\\*\\*"
  attack_info:
  - tactics:
    - Lateral Movement
    technique_id: T1105
    technique_name: Lateral Tool Transfer
  mode: first-pass
- id: CASCADE-0061
  name: Analytic - File Creations to Admin Shares
  description: This analytic is based off of "Analytic - File Creations to Network
    Paths", but additionally filters down analytics further to only identify instances
    of files copied into remote network shares.
  eql: |-
    file where subtype.create and
      file_path == "\\\\*\\*" and file_path == "*\\*$\\*"
  attack_info:
  - tactics:
    - Lateral Movement
    technique_id: T1021.002
    technique_name: SMB/Windows Admin Shares
  mode: first-pass
- id: CASCADE-0062
  name: Tools (Microsoft) - schtasks.exe - Privilege Escalation via SYSTEM Tasks
  description: Looking for "schtasks" commands to remote machines should be considered
    highly suspicious and many environments, as it can be used to remotely execute
    command on another machine. This may be combined with a lateral movement activity,
    such as an SMB file write to move an implant from one hostto the next.
  eql: |-
    process where subtype.create and
      exe == "schtasks.exe" and command_line == "* /RU *SYSTEM*"
      and user != "NT AUTHORITY\\SYSTEM"
  attack_info:
  - tactics:
    - Privilege Escalation
    technique_id: T1053.005
    technique_name: Scheduled Task/Job - Scheduled Task
  mode: first-pass
- id: CASCADE-0063
  name: Event - Scheduled Task Processes (children of svchost -k netsvcs)
  description: As a second pass, it can be helpful to identify processes spawned from
    svchost. This detects scheduled task processes on Windows operating systems >= 8.0.
    Windows 7 and prior had a separate process, taskeng.exe to run services.
  eql: |-
    process where subtype.create and
        parent_command_line == "*\\svchost.exe -k netsvcs"
  attack_info:
  - tactics:
    - Persistence
    technique_id: T1053.005
    technique_name: Scheduled Task/Job - Scheduled Task
  mode: ~
